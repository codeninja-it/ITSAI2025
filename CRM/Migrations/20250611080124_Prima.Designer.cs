// <auto-generated />
using System;
using CRM.Strutture;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM.Migrations
{
    [DbContext(typeof(Archivio))]
    [Migration("20250611080124_Prima")]
    partial class Prima
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("CRM.Strutture.Contatto", b =>
                {
                    b.Property<int>("IdContatto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdContatto");

                    b.ToTable("contatti");
                });

            modelBuilder.Entity("CRM.Strutture.Messaggio", b =>
                {
                    b.Property<int>("IdMessaggio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AIdContatto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DaIdContatto")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProgettoIdProgetto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Testo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdMessaggio");

                    b.HasIndex("AIdContatto");

                    b.HasIndex("DaIdContatto");

                    b.HasIndex("ProgettoIdProgetto");

                    b.ToTable("messaggi");
                });

            modelBuilder.Entity("CRM.Strutture.Progetto", b =>
                {
                    b.Property<int>("IdProgetto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommittenteIdContatto")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Creazione")
                        .HasColumnType("TEXT");

                    b.Property<string>("Perimetro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdProgetto");

                    b.HasIndex("CommittenteIdContatto");

                    b.ToTable("progetti");
                });

            modelBuilder.Entity("CRM.Strutture.Richiesta", b =>
                {
                    b.Property<int>("IdRichiesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Fatto")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inserimento")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProgettoIdProgetto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdRichiesta");

                    b.HasIndex("ProgettoIdProgetto");

                    b.ToTable("richieste");
                });

            modelBuilder.Entity("CRM.Strutture.Messaggio", b =>
                {
                    b.HasOne("CRM.Strutture.Contatto", "A")
                        .WithMany()
                        .HasForeignKey("AIdContatto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM.Strutture.Contatto", "Da")
                        .WithMany()
                        .HasForeignKey("DaIdContatto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM.Strutture.Progetto", null)
                        .WithMany("Messaggi")
                        .HasForeignKey("ProgettoIdProgetto");

                    b.Navigation("A");

                    b.Navigation("Da");
                });

            modelBuilder.Entity("CRM.Strutture.Progetto", b =>
                {
                    b.HasOne("CRM.Strutture.Contatto", "Committente")
                        .WithMany()
                        .HasForeignKey("CommittenteIdContatto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Committente");
                });

            modelBuilder.Entity("CRM.Strutture.Richiesta", b =>
                {
                    b.HasOne("CRM.Strutture.Progetto", "Progetto")
                        .WithMany("Richieste")
                        .HasForeignKey("ProgettoIdProgetto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Progetto");
                });

            modelBuilder.Entity("CRM.Strutture.Progetto", b =>
                {
                    b.Navigation("Messaggi");

                    b.Navigation("Richieste");
                });
#pragma warning restore 612, 618
        }
    }
}
